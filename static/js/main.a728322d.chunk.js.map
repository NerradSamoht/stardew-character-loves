{"version":3,"sources":["Character.js","App.js","serviceWorker.js","index.js"],"names":["Character","loves","this","props","map","item","src","replace","react_default","a","createElement","key","uniqid","process","alt","className","onClick","hideCharacter","width","img","name","birthday","Component","data","stardew","Characters","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","getCharacter","e","target","getAttribute","character","state","characters","filter","length","setState","showCharacter","_this2","characterList","data-name","title","src_Character","href","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a728322d.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport uniqid from \"uniqid\";\n\nclass Character extends Component {\n  render() {\n    const loves = this.props.loves.map(item => {\n      const file = item.replace(/\\s/g, \"_\");\n      const src = \"/assets/\" + file + \".png\";\n      return (\n        <li key={uniqid()}>\n          <img src={process.env.PUBLIC_URL + src} alt=\"\" />\n          {item}\n        </li>\n      );\n    });\n\n    return (\n      <div className=\"\">\n        <button onClick={this.props.hideCharacter} className=\"close\">\n          X\n        </button>\n        <img\n          width=\"80\"\n          src={process.env.PUBLIC_URL + this.props.img}\n          className=\"profile-pic\"\n          alt={this.props.name}\n        />\n        <p className=\"name\">{this.props.name}</p>\n        <p className=\"birthday\">Birthday: {this.props.birthday}</p>\n        <ul className=\"list\">{loves}</ul>\n      </div>\n    );\n  }\n}\n\nexport default Character;\n","import React, { Component } from \"react\";\nimport stardew from \"./stardew.json\";\nimport Character from \"./Character\";\nimport uniqid from \"uniqid\";\n\nconst data = stardew.Characters;\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      characters: data,\n      showCharacter: false,\n      name: null,\n      birthday: null,\n      loves: null,\n      img: null\n    };\n  }\n\n  getCharacter = e => {\n    const name = e.target.getAttribute(\"data-name\");\n    const character = this.state.characters.filter(item => item.name === name);\n\n    if (character.length > 0) {\n      this.setState(\n        {\n          name: character[0].name,\n          birthday: character[0].birthday,\n          loves: character[0].loves,\n          img: character[0].img\n        },\n        this.showCharacter()\n      );\n    }\n  };\n\n  showCharacter = () => {\n    this.setState({\n      showCharacter: true\n    });\n  };\n\n  hideCharacter = () => {\n    this.setState({\n      showCharacter: false\n    });\n  };\n\n  render() {\n    const characterList = this.state.characters.map(item => (\n      <button key={uniqid()} onClick={this.getCharacter} data-name={item.name}>\n        <img\n          src={process.env.PUBLIC_URL + item.img}\n          alt={item.name}\n          title={item.name}\n          data-name={item.name}\n        />\n      </button>\n    ));\n\n    return (\n      <div>\n        {!this.state.showCharacter ? (\n          <div>\n            <div className=\"container\">\n              <div>\n                <h2>Select a character</h2>\n                <div className=\"character-list\">{characterList}</div>\n              </div>\n            </div>\n            <footer>\n              <p>\n                All content and images from the{\" \"}\n                <a href=\"https://stardewvalleywiki.com/Stardew_Valley_Wiki\">\n                  Official Stardew Valley Wiki\n                </a>\n                . <br />\n                Licenced under{\" \"}\n                <a href=\"https://creativecommons.org/licenses/by-nc-sa/3.0/\">\n                  Creative Commons Attribution-NonCommercial-ShareAlike\n                </a>\n                .\n              </p>\n            </footer>\n          </div>\n        ) : (\n          <div className=\"container\">\n            <Character\n              hideCharacter={this.hideCharacter}\n              img={this.state.img}\n              name={this.state.name}\n              birthday={this.state.birthday}\n              loves={this.state.loves}\n            />\n          </div>\n        )}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}